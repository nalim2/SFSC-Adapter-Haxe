// Generated by Haxe 4.0.3
#ifndef INCLUDED_BootstrapConfiguration
#define INCLUDED_BootstrapConfiguration

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(BootstrapConfiguration)



class HXCPP_CLASS_ATTRIBUTES BootstrapConfiguration_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef BootstrapConfiguration_obj OBJ_;
		BootstrapConfiguration_obj();

	public:
		enum { _hx_ClassId = 0x025ae7b4 };

		void __construct(::String coreHost,int corePort);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="BootstrapConfiguration")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"BootstrapConfiguration"); }
		static hx::ObjectPtr< BootstrapConfiguration_obj > __new(::String coreHost,int corePort);
		static hx::ObjectPtr< BootstrapConfiguration_obj > __alloc(hx::Ctx *_hx_ctx,::String coreHost,int corePort);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BootstrapConfiguration_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("BootstrapConfiguration",88,a5,d7,c6); }

		::String coreHost;
		int corePort;
		::String get_coreHost();
		::Dynamic get_coreHost_dyn();

		int test_value();
		::Dynamic test_value_dyn();

		int get_corePort();
		::Dynamic get_corePort_dyn();

};


#endif /* INCLUDED_BootstrapConfiguration */ 
