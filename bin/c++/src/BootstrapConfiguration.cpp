// Generated by Haxe 4.0.3
#include <hxcpp.h>

#ifndef INCLUDED_2318f3662842731c
#define INCLUDED_2318f3662842731c
#include "C:\Users\Bifi\Desktop\Arbeit\Haxe3\src\testfolder\add.cpp"
#endif
#ifndef INCLUDED_BootstrapConfiguration
#include <BootstrapConfiguration.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0b830032db64b33e_21_new,"BootstrapConfiguration","new",0x0948aa7a,"BootstrapConfiguration.new",".\\src/Main.hx",21,0xca926cec)
HX_LOCAL_STACK_FRAME(_hx_pos_0b830032db64b33e_27_get_coreHost,"BootstrapConfiguration","get_coreHost",0xf1ae1b16,"BootstrapConfiguration.get_coreHost",".\\src/Main.hx",27,0xca926cec)
HX_LOCAL_STACK_FRAME(_hx_pos_0b830032db64b33e_31_test_value,"BootstrapConfiguration","test_value",0x93d995aa,"BootstrapConfiguration.test_value",".\\src/Main.hx",31,0xca926cec)
HX_LOCAL_STACK_FRAME(_hx_pos_0b830032db64b33e_35_get_corePort,"BootstrapConfiguration","get_corePort",0xf6f7cf2f,"BootstrapConfiguration.get_corePort",".\\src/Main.hx",35,0xca926cec)

void BootstrapConfiguration_obj::__construct(::String coreHost,int corePort){
            	HX_STACKFRAME(&_hx_pos_0b830032db64b33e_21_new)
HXLINE(  22)		this->coreHost = coreHost;
HXLINE(  23)		this->corePort = corePort;
            	}

Dynamic BootstrapConfiguration_obj::__CreateEmpty() { return new BootstrapConfiguration_obj; }

void *BootstrapConfiguration_obj::_hx_vtable = 0;

Dynamic BootstrapConfiguration_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< BootstrapConfiguration_obj > _hx_result = new BootstrapConfiguration_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool BootstrapConfiguration_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x025ae7b4;
}

::String BootstrapConfiguration_obj::get_coreHost(){
            	HX_STACKFRAME(&_hx_pos_0b830032db64b33e_27_get_coreHost)
HXDLIN(  27)		return this->coreHost;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BootstrapConfiguration_obj,get_coreHost,return )

int BootstrapConfiguration_obj::test_value(){
            	HX_STACKFRAME(&_hx_pos_0b830032db64b33e_31_test_value)
HXDLIN(  31)		return Add::sum(10,20);
            	}


HX_DEFINE_DYNAMIC_FUNC0(BootstrapConfiguration_obj,test_value,return )

int BootstrapConfiguration_obj::get_corePort(){
            	HX_STACKFRAME(&_hx_pos_0b830032db64b33e_35_get_corePort)
HXDLIN(  35)		return this->corePort;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BootstrapConfiguration_obj,get_corePort,return )


hx::ObjectPtr< BootstrapConfiguration_obj > BootstrapConfiguration_obj::__new(::String coreHost,int corePort) {
	hx::ObjectPtr< BootstrapConfiguration_obj > __this = new BootstrapConfiguration_obj();
	__this->__construct(coreHost,corePort);
	return __this;
}

hx::ObjectPtr< BootstrapConfiguration_obj > BootstrapConfiguration_obj::__alloc(hx::Ctx *_hx_ctx,::String coreHost,int corePort) {
	BootstrapConfiguration_obj *__this = (BootstrapConfiguration_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BootstrapConfiguration_obj), true, "BootstrapConfiguration"));
	*(void **)__this = BootstrapConfiguration_obj::_hx_vtable;
	__this->__construct(coreHost,corePort);
	return __this;
}

BootstrapConfiguration_obj::BootstrapConfiguration_obj()
{
}

void BootstrapConfiguration_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BootstrapConfiguration);
	HX_MARK_MEMBER_NAME(coreHost,"coreHost");
	HX_MARK_MEMBER_NAME(corePort,"corePort");
	HX_MARK_END_CLASS();
}

void BootstrapConfiguration_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(coreHost,"coreHost");
	HX_VISIT_MEMBER_NAME(corePort,"corePort");
}

hx::Val BootstrapConfiguration_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"coreHost") ) { return hx::Val( inCallProp == hx::paccAlways ? get_coreHost() : coreHost ); }
		if (HX_FIELD_EQ(inName,"corePort") ) { return hx::Val( inCallProp == hx::paccAlways ? get_corePort() : corePort ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"test_value") ) { return hx::Val( test_value_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_coreHost") ) { return hx::Val( get_coreHost_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_corePort") ) { return hx::Val( get_corePort_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val BootstrapConfiguration_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"coreHost") ) { coreHost=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"corePort") ) { corePort=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void BootstrapConfiguration_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("coreHost",67,54,64,12));
	outFields->push(HX_("corePort",80,08,ae,17));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo BootstrapConfiguration_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(BootstrapConfiguration_obj,coreHost),HX_("coreHost",67,54,64,12)},
	{hx::fsInt,(int)offsetof(BootstrapConfiguration_obj,corePort),HX_("corePort",80,08,ae,17)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *BootstrapConfiguration_obj_sStaticStorageInfo = 0;
#endif

static ::String BootstrapConfiguration_obj_sMemberFields[] = {
	HX_("coreHost",67,54,64,12),
	HX_("corePort",80,08,ae,17),
	HX_("get_coreHost",70,08,7e,c7),
	HX_("test_value",84,98,ff,11),
	HX_("get_corePort",89,bc,c7,cc),
	::String(null()) };

hx::Class BootstrapConfiguration_obj::__mClass;

void BootstrapConfiguration_obj::__register()
{
	BootstrapConfiguration_obj _hx_dummy;
	BootstrapConfiguration_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("BootstrapConfiguration",88,a5,d7,c6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(BootstrapConfiguration_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< BootstrapConfiguration_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BootstrapConfiguration_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BootstrapConfiguration_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

